events {
    worker_connections 1024;
}

http {
    upstream playwright_backend {
        server playwright-1:3000 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    server {
        listen 80;
        server_name _;

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 主要API路径
        location / {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            # Token认证检查（使用正确的Token）
            access_by_lua_block {
                local token = ngx.var.http_authorization
                if token then
                    token = string.match(token, "Bearer%s+(.+)")
                end
                if not token then
                    token = ngx.var.arg_token
                end
                
                if not token then
                    ngx.status = 401
                    ngx.say('{"error": "Missing token"}')
                    ngx.exit(401)
                end
                
                -- 使用正确的Token
                local expected_token = "server-main-250814-3b8d62756978b0594413429354f5c084"
                
                if token ~= expected_token then
                    ngx.status = 401
                    ngx.say('{"error": "Invalid token"}')
                    ngx.exit(401)
                end
            }

            # 代理到后端服务
            proxy_pass http://playwright_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}