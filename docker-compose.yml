version: '3.8'

services:
  nginx:
    image: openresty/openresty:alpine
    container_name: playwright-nginx
    ports:
      - "${EXTERNAL_PORT:-3000}:80"
    volumes:
      - ./nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - nginx-logs:/var/log/nginx
    environment:
      - ALLOWED_TOKENS=${ALLOWED_TOKENS:-default-token}
      - PLAYWRIGHT_TOKEN=${PLAYWRIGHT_TOKEN:-default-token}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30}s
      timeout: ${HEALTH_CHECK_TIMEOUT:-10}s
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 40s
    depends_on:
      playwright-1:
        condition: service_healthy
    networks:
      - playwright-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.2'

  playwright-1:
    image: mcr.microsoft.com/playwright:v1.54.0-noble
    container_name: playwright-1
    command: >
      sh -c "
        echo 'Starting Playwright server...' &&
        npx playwright run-server --port ${INTERNAL_PORT:-3000} --host 0.0.0.0
      "
    environment:
      - PLAYWRIGHT_TOKEN=${PLAYWRIGHT_TOKEN:-default-token}
      - INTERNAL_PORT=${INTERNAL_PORT:-3000}
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep -v grep | grep 'playwright run-server' || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30}s
      timeout: ${HEALTH_CHECK_TIMEOUT:-10}s
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 60s
    networks:
      - playwright-network
    restart: unless-stopped
    # 减少不必要的权限，提升安全性
    # security_opt:
    #   - seccomp:./seccomp_profile.json
    ipc: host
    init: true
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp=unconfined
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  playwright-worker:
    image: mcr.microsoft.com/playwright:v1.54.0-noble
    command: >
      sh -c "
        echo 'Starting Playwright server...' &&
        npx playwright run-server --port ${INTERNAL_PORT:-3000} --host 0.0.0.0
      "
    environment:
      - PLAYWRIGHT_TOKEN=${PLAYWRIGHT_TOKEN:-default-token}
      - INTERNAL_PORT=${INTERNAL_PORT:-3000}
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep -v grep | grep 'playwright run-server' || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30}s
      timeout: ${HEALTH_CHECK_TIMEOUT:-10}s
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 60s
    networks:
      - playwright-network
    restart: unless-stopped
    # security_opt:
    #   - seccomp:./seccomp_profile.json
    ipc: host
    init: true
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp=unconfined
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'

volumes:
  nginx-logs:
    driver: local

networks:
  playwright-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: "playwright-br"